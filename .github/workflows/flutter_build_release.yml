name: Flutter Build APK On Release Commit

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  build:
    if: contains(github.event.head_commit.message, 'Test Release') || contains(github.event.pull_request.title, 'Test Release')
    runs-on: ubuntu-latest

    steps:
      - name: üõí Checkout Repository
        uses: actions/checkout@v4

      - name: üì¶ Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "latest"
          channel: "stable"

      - name: üîç Extract Version & Build Number
        id: version
        run: |
          sudo apt-get install -y yq
          VERSION_NAME=$(yq eval '.version' pubspec.yaml | cut -d'+' -f1)
          BUILD_NUMBER=$(yq eval '.version' pubspec.yaml | cut -d'+' -f2)
          echo "VERSION_NAME=$VERSION_NAME" >> $GITHUB_ENV
          echo "BUILD_NUMBER=$BUILD_NUMBER" >> $GITHUB_ENV

      - name: üõ†Ô∏è Check Code Quality & Tests
        run: |
          flutter analyze
          flutter test

      - name: üîë Setup Keystore (if available)
        env:
          KEYSTORE_FILE: ${{ secrets.KEYSTORE_FILE }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          if [ -n "$KEYSTORE_FILE" ]; then
            echo "üîë Keystore detected, setting up..."
            echo "$KEYSTORE_FILE" | base64 --decode > android/app/release.keystore
            echo "storePassword=$KEYSTORE_PASSWORD" > android/key.properties
            echo "keyPassword=$KEY_PASSWORD" >> android/key.properties
            echo "keyAlias=$KEY_ALIAS" >> android/key.properties
            echo "storeFile=release.keystore" >> android/key.properties
          else
            echo "‚ö†Ô∏è No keystore found, skipping signing."
          fi

      - name: üî® Build APK
        run: |
          flutter build apk --release --split-per-abi \
            --obfuscate --split-debug-info=build/symbols \
            --tree-shake-icons --dart-define=USE_PROGUARD=true \
            --target-platform android-arm,android-arm64

      - name: üì§ Upload APK & Debug Symbols
        uses: actions/upload-artifact@v3
        with:
          name: app-release-v${{ env.VERSION_NAME }}-b${{ env.BUILD_NUMBER }}.apk
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: üõ† Upload Debug Symbols (for better crash analysis)
        uses: actions/upload-artifact@v3
        with:
          name: debug-symbols-v${{ env.VERSION_NAME }}-b${{ env.BUILD_NUMBER }}
          path: build/symbols

      - name: üöÄ Create GitHub Release (optional)
        if: success()
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSION_NAME }}-b${{ env.BUILD_NUMBER }}
          name: "Release v${{ env.VERSION_NAME }} (Build ${{ env.BUILD_NUMBER }})"
          body: "New release version ${{ env.VERSION_NAME }} with build number ${{ env.BUILD_NUMBER }}."
          files: build/app/outputs/flutter-apk/app-release.apk
          draft: false
          prerelease: false
